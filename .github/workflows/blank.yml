name: Kubernetes Cluster Setup (Vagrant + Docker)
on: [push]
jobs:
  prepare-environment:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      
      - name: Generate SSH key
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ""
          chmod 600 ~/.ssh/id_rsa
          
      - name: Upload SSH key as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ssh-key
          path: ~/.ssh/id_rsa

  setup-master:
    runs-on: self-hosted
    needs: prepare-environment
  
    steps:
      - uses: actions/checkout@v4
      - name: Install Docker and Vagrant
        run: |
          arch -arm64 brew install docker vagrant ansible
      - name: Download SSH key
        uses: actions/download-artifact@v4
        with:
          name: ssh-key
          path: ~/.ssh/
      - run: chmod 600 ~/.ssh/id_rsa
      - name: Start Vagrant (with Python pre-install)
        run: |
          vagrant up --provider=docker k8s-master
          vagrant ssh k8s-master -c "sudo apt update && sudo apt install -y python3"
   
     #- name: Run Ansible
     #   run: |
     #     vagrant ssh k8s-master -c "sudo ansible-playbook /vagrant/kubernetes-setup/master-playbook.yml"
      
      - name: Get join command
        id: get-join-command
        run: |
          JOIN_COMMAND=$(vagrant ssh k8s-master -c "sudo kubeadm token create --print-join-command" | tr -d '\r')
          echo "JOIN_COMMAND=${JOIN_COMMAND}" >> $GITHUB_ENV
      
      - name: Verify Docker containers
        run: docker ps -a
  
  # Job for provisioning worker nodes
  setup-workers:
    runs-on: [self-hosted, macos]
    needs: setup-master  # Ensure workers start after the master is provisioned
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Docker and Vagrant dependencies
      run: |
        arch -arm64 brew install docker
        arch -arm64 brew install vagrant
        arch -arm64 brew install ansible

    - name: Create Docker network
      run: docker network create k8s-net || true

    - name: Download SSH key artifact
      uses: actions/download-artifact@v4
      with:
        name: ssh-key
        path: ~/.ssh/
    
    - name: Set permissions for SSH key
      run: chmod 600 ~/.ssh/id_rsa

    - name: Set up Vagrant environment for worker nodes
      run: |
        vagrant plugin install vagrant-docker-compose
        # Note: We don't destroy existing containers here to preserve the master
        vagrant up --provider=docker node-1 node-2
        vagrant ssh node-1 -c "sudo apt update && sudo apt install -y python3"    
        vagrant ssh node-2 -c "sudo apt update && sudo apt install -y python3"    


    - name: Verify Docker containers
      run: docker ps -a

    - name: Provision worker nodes with Ansible
      run: |
        vagrant ssh node-1 -c "sudo ansible-playbook /vagrant/kubernetes-setup/node-playbook.yml"
        vagrant ssh node-2 -c "sudo ansible-playbook /vagrant/kubernetes-setup/node-playbook.yml"
    
    - name: Join workers to cluster
      run: |
        JOIN_COMMAND=$(echo "${{ env.JOIN_COMMAND }}" | tr -d '\r')
        vagrant ssh node-1 -c "sudo $JOIN_COMMAND"
        vagrant ssh node-2 -c "sudo $JOIN_COMMAND"

    - name: Verify Docker containers
      run: docker ps -a

    - name: Verify cluster status
      run: |
        vagrant ssh k8s-master -c "sudo -u vagrant kubectl get nodes"
