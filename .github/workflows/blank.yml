name: kubernetes-vagrant-cluster
on: [push]

jobs:
  # First, set up the Kubernetes environment files
  setup-kubernetes-files:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Create Vagrantfile
      run: |
        cat > Vagrantfile << 'EOF'
        IMAGE_NAME = "bento/ubuntu-16.04"
        N = 2
        Vagrant.configure("2") do |config|
            config.ssh.insert_key = false
            config.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key", "~/.ssh/id_rsa"]
            config.vm.provider "virtualbox" do |v|
                v.memory = 2048
                v.cpus = 2
            end
              
            config.vm.define "k8s-master" do |master|
                master.vm.box = IMAGE_NAME
                master.vm.network "private_network", ip: "192.168.56.10"
                master.vm.hostname = "k8s-master"
                master.vm.provision "ansible" do |ansible|
                    ansible.config_file = "ansible.cfg"
                    ansible.playbook = "kubernetes-setup/master-playbook.yml"
                    ansible.extra_vars = {
                        node_ip: "192.168.56.10",
                    }
                end
            end
            (1..N).each do |i|
                config.vm.define "node-#{i}" do |node|
                    node.vm.box = IMAGE_NAME
                    node.vm.network "private_network", ip: "192.168.56.#{i + 10}"
                    node.vm.hostname = "node-#{i}"
                    node.vm.provision "ansible" do |ansible|
                        ansible.config_file = "ansible.cfg"
                        ansible.playbook = "kubernetes-setup/node-playbook.yml"
                        ansible.extra_vars = {
                            node_ip: "192.168.56.#{i + 10}",
                        }
                        ansible.raw_ssh_args = ["-o IdentitiesOnly=yes", "-i ~/.vagrant.d/insecure_private_key"]
                    end
                end
            end
        end
        EOF
    
    - name: Setup Ansible configuration
      run: |
        mkdir -p kubernetes-setup
        touch ansible.cfg
        echo "[defaults]" > ansible.cfg
        echo "host_key_checking = False" >> ansible.cfg
        
        # Create placeholder playbooks (replace these with your actual playbooks)
        echo "---" > kubernetes-setup/master-playbook.yml
        echo "- hosts: all" >> kubernetes-setup/master-playbook.yml
        echo "  tasks:" >> kubernetes-setup/master-playbook.yml
        echo "    - name: Echo test" >> kubernetes-setup/master-playbook.yml
        echo "      debug:" >> kubernetes-setup/master-playbook.yml
        echo "        msg: 'Setting up master node'" >> kubernetes-setup/master-playbook.yml
        
        echo "---" > kubernetes-setup/node-playbook.yml
        echo "- hosts: all" >> kubernetes-setup/node-playbook.yml
        echo "  tasks:" >> kubernetes-setup/node-playbook.yml
        echo "    - name: Echo test" >> kubernetes-setup/node-playbook.yml
        echo "      debug:" >> kubernetes-setup/node-playbook.yml
        echo "        msg: 'Setting up worker node'" >> kubernetes-setup/node-playbook.yml
    
    - name: Upload workflow files
      uses: actions/upload-artifact@v3
      with:
        name: kubernetes-files
        path: |
          Vagrantfile
          ansible.cfg
          kubernetes-setup/
  
  # Then, call the vagrant-up workflow
  run-vagrant:
    needs: setup-kubernetes-files
    uses: ./.github/workflows/vagrant-up.yml
