- name: Configure Kubernetes worker
  hosts: localhost
  become: true
  tasks:
    # 1. Disable swap
    - name: Disable swap
      shell: |
        swapoff -a
        [ -f /etc/fstab ] && sed -i '/ swap / s/^/#/' /etc/fstab
      args:
        warn: false

  # 1. Ensure containerd is installed
    - name: Install containerd
      apt:
        name: containerd
        state: present
        update_cache: yes

    # 2. Create directory structure
    - name: Create containerd directories
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - /etc/containerd
        - /run/containerd
        - /var/lib/containerd

    # 3. Create config file with fallback content if default generation fails
    - name: Ensure config file exists
      block:
        - name: Try to generate default config
          command: containerd config default > /etc/containerd/config.toml
          args:
            creates: /etc/containerd/config.toml
          register: config_gen
          ignore_errors: yes

      - name: Create minimal config if generation failed
        copy:
          dest: /etc/containerd/config.toml
          content: |
            version = 2
            [plugins]
              [plugins."io.containerd.grpc.v1.cri"]
                sandbox_image = "registry.k8s.io/pause:3.8"
                [plugins."io.containerd.grpc.v1.cri".containerd]
                  snapshotter = "overlayfs"
                  [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
                    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                      runtime_type = "io.containerd.runc.v2"
        when: config_gen is failed or config_gen.rc != 0

    # 4. Start containerd (non-systemd method)
    - name: Start containerd service
      shell: |
        # Kill any existing containerd processes
        pkill containerd || true
        # Start new instance
        nohup containerd --config /etc/containerd/config.toml >/var/log/containerd.log 2>&1 &
        echo $! > /run/containerd/pid
        sleep 3  # Wait for service to start
      args:
        warn: false

    # 5. Verify containerd is running
    - name: Check containerd status
      shell: |
        ctr version
      register: containerd_status
      changed_when: false
      failed_when: containerd_status.rc != 0

    - name: Fail if containerd not running
      fail:
        msg: "Containerd failed to start - check /var/log/containerd.log"
      when: containerd_status.rc != 0

    # Rest of your worker tasks remain the same...
    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - br_netfilter
        - overlay

    - name: Configure sysctl
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      with_items:
        - { key: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
        - { key: 'net.bridge.bridge-nf-call-iptables', value: '1' }

    # ... (rest of your playbook)

- name: Install Kubernetes components on worker
  hosts: localhost
  become: true
  tasks:
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
        state: present
        update_cache: yes

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755

    - name: Add Kubernetes GPG key (updated method)
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        warn: false

    - name: Add Kubernetes repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
        state: present
        filename: kubernetes
        mode: 0644
        
    - name: Install kubeadm, kubelet and kubectl
      apt:
        name:
          - kubelet=1.28.0-1.1
          - kubeadm=1.28.0-1.1
          - kubectl=1.28.0-1.1
        state: present

    - name: Hold kubeadm, kubelet and kubectl versions
      command: apt-mark hold kubelet kubeadm kubectl

handlers:
    - name: restart containerd
      systemd:
        name: containerd
        state: restarted
